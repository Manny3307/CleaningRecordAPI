# Generated by Django 3.2.9 on 2021-12-02 10:49

import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CreateCleaningRecords',
            fields=[
                ('folder_id', models.AutoField(primary_key=True, serialize=False)),
                ('folder_name', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UberDriver',
            fields=[
                ('driver_id', models.AutoField(primary_key=True, serialize=False)),
                ('driver_email', models.EmailField(max_length=200, unique=True)),
                ('driver_first_name', models.CharField(max_length=500)),
                ('driver_last_name', models.CharField(blank=True, max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='UberRegisteredCar',
            fields=[
                ('uber_car_id', models.AutoField(primary_key=True, serialize=False)),
                ('uber_car_rego', models.CharField(max_length=15)),
                ('uber_car_vin', models.CharField(max_length=100)),
                ('uber_car_insurance_provider', models.CharField(max_length=150)),
                ('uber_car_insurance_type', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='UberTempCleaningRecords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date_and_time_of_trip', models.TextField()),
                ('Date_and_Time_of_clean', models.TextField()),
                ('Driver_name', models.TextField()),
                ('Driver_certificate_number', models.TextField()),
                ('Passenger_hightouch_surfaces_cleaned', models.TextField()),
                ('Driver_hightouch_surfaces_cleaned', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='UberDriverTripRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driver_phone_number', models.CharField(max_length=15)),
                ('driver_email', models.CharField(max_length=50)),
                ('driver_trip_id', models.CharField(max_length=50)),
                ('driver_trip_type', models.CharField(max_length=15)),
                ('driver_trip_base_fare', models.CharField(max_length=5)),
                ('driver_trip_cancellation_fare', models.CharField(blank=True, max_length=5)),
                ('driver_trip_date_time', models.CharField(max_length=45)),
                ('driver_trip_fare_min_or_supplement', models.CharField(blank=True, max_length=5)),
                ('driver_trip_fare_supplement', models.CharField(blank=True, max_length=5)),
                ('driver_trip_wait_time', models.CharField(blank=True, max_length=5)),
                ('driver_trip_service_fee', models.CharField(blank=True, max_length=5)),
                ('driver_trip_tip', models.CharField(blank=True, max_length=5)),
                ('driver_trip_total', models.CharField(max_length=10)),
                ('driver_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.uberdriver')),
            ],
        ),
        migrations.CreateModel(
            name='UberDriverCPVVCertificate',
            fields=[
                ('driver_certificate_id', models.AutoField(primary_key=True, serialize=False)),
                ('driver_cpvv_certicate', models.CharField(max_length=25)),
                ('driver_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.uberdriver')),
            ],
        ),
        migrations.CreateModel(
            name='UberDriverContactInfo',
            fields=[
                ('driver_contact_id', models.AutoField(primary_key=True, serialize=False)),
                ('driver_contact_type', models.CharField(max_length=20)),
                ('driver_contact_value', models.CharField(max_length=1000)),
                ('driver_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.uberdriver')),
            ],
        ),
        migrations.CreateModel(
            name='UberDriverCar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driver_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.uberdriver')),
                ('uber_car_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.uberregisteredcar')),
            ],
        ),
        migrations.CreateModel(
            name='UberCleaningRecords',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('driver_certificate_id', models.TextField()),
                ('date_and_time_of_trip', models.TextField()),
                ('date_and_time_of_clean', models.TextField()),
                ('passenger_high_touch_surfaces', models.TextField()),
                ('driver_high_touch_surfaces', models.TextField()),
                ('driver_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.uberdriver')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('time_minutes', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=5)),
                ('link', models.CharField(blank=True, max_length=255)),
                ('image', models.ImageField(null=True, upload_to=core.models.recipe_image_file_path)),
                ('ingredients', models.ManyToManyField(to='core.Ingredient')),
                ('tags', models.ManyToManyField(to='core.Tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
