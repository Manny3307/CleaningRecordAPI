[
 {
  "UberDateLog": "02/12/2021 03-08-49 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-1Dec-15Dec2021.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-1Dec-15Dec2021.pdf' to AWS Cloud!!!",
    "'Cleaning-record-1Dec-15Dec2021.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 03-11-19 AM",
  "UberLogs": [
   "ERROR: Cannot load the Database settings from DBconfig.json",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 34, in __init__\n    DatabaseName = os.environ.get('DB_NAME')\nNameError: name 'os' is not defined\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 03-13-15 AM",
  "UberLogs": [
   "ERROR: Cleaning Records could not be sent to UberTempCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 3243, in _wrap_pool_connect\n    return fn()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 310, in connect\n    return _ConnectionFairy._checkout(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 868, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 476, in checkout\n    rec = pool._do_get()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/impl.py\", line 146, in _do_get\n    self._dec_overflow()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/impl.py\", line 143, in _do_get\n    return self._create_connection()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 256, in _create_connection\n    return _ConnectionRecord(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 371, in __init__\n    self.__connect()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 666, in __connect\n    pool.logger.debug(\"Error on connect(): %s\", e)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 661, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/create.py\", line 590, in connect\n    return dialect.connect(*cargs, **cparams)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 584, in connect\n    return self.dbapi.connect(*cargs, **cparams)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/__init__.py\", line 179, in connect\n    return MySQLConnection(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 95, in __init__\n    self.connect(**kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/abstracts.py\", line 716, in connect\n    self._open_connection()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 208, in _open_connection\n    self._do_auth(self._user, self._password,\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 137, in _do_auth\n    packet = self._protocol.make_auth(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/protocol.py\", line 99, in make_auth\n    packet += self._auth_response(client_flags, username, password,\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/protocol.py\", line 58, in _auth_response\n    auth = get_auth_plugin(auth_plugin)(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/authentication.py\", line 190, in get_auth_plugin\n    raise errors.NotSupportedError(\nmysql.connector.errors.NotSupportedError: Authentication plugin 'caching_sha2_password' is not supported\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 53, in send_DB_records\n    final_df.to_sql('core_ubertempcleaningrecords', engine, if_exists='append', index=False)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/core/generic.py\", line 2872, in to_sql\n    sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 717, in to_sql\n    pandas_sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1751, in to_sql\n    table = self.prep_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1650, in prep_table\n    table.create()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 856, in create\n    if self.exists():\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 840, in exists\n    return self.pd_sql.has_table(self.name, self.schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1783, in has_table\n    insp = sa.inspect(self.connectable)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/inspection.py\", line 64, in inspect\n    ret = reg(subject)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 182, in _engine_insp\n    return Inspector._construct(Inspector._init_engine, bind)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 117, in _construct\n    init(self, bind)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 128, in _init_engine\n    engine.connect().close()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 3197, in connect\n    return self._connection_cls(self, close_with_result=close_with_result)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 96, in __init__\n    else engine.raw_connection()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 3276, in raw_connection\n    return self._wrap_pool_connect(self.pool.connect, _connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 3246, in _wrap_pool_connect\n    Connection._handle_dbapi_exception_noconnection(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 2100, in _handle_dbapi_exception_noconnection\n    util.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 3243, in _wrap_pool_connect\n    return fn()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 310, in connect\n    return _ConnectionFairy._checkout(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 868, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 476, in checkout\n    rec = pool._do_get()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/impl.py\", line 146, in _do_get\n    self._dec_overflow()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/impl.py\", line 143, in _do_get\n    return self._create_connection()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 256, in _create_connection\n    return _ConnectionRecord(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 371, in __init__\n    self.__connect()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 666, in __connect\n    pool.logger.debug(\"Error on connect(): %s\", e)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 661, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/create.py\", line 590, in connect\n    return dialect.connect(*cargs, **cparams)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 584, in connect\n    return self.dbapi.connect(*cargs, **cparams)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/__init__.py\", line 179, in connect\n    return MySQLConnection(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 95, in __init__\n    self.connect(**kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/abstracts.py\", line 716, in connect\n    self._open_connection()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 208, in _open_connection\n    self._do_auth(self._user, self._password,\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 137, in _do_auth\n    packet = self._protocol.make_auth(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/protocol.py\", line 99, in make_auth\n    packet += self._auth_response(client_flags, username, password,\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/protocol.py\", line 58, in _auth_response\n    auth = get_auth_plugin(auth_plugin)(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/authentication.py\", line 190, in get_auth_plugin\n    raise errors.NotSupportedError(\nsqlalchemy.exc.NotSupportedError: (mysql.connector.errors.NotSupportedError) Authentication plugin 'caching_sha2_password' is not supported\n(Background on this error at: https://sqlalche.me/e/14/tw8g)\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 03-13-15 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-15Dec-30Dec2021.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-15Dec-30Dec2021.pdf' to AWS Cloud!!!",
    "'Cleaning-record-15Dec-30Dec2021.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 03-13-15 AM",
  "UberLogs": [
   "ERROR: Cleaning Records could not be sent to UberTempCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 3243, in _wrap_pool_connect\n    return fn()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 310, in connect\n    return _ConnectionFairy._checkout(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 868, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 476, in checkout\n    rec = pool._do_get()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/impl.py\", line 146, in _do_get\n    self._dec_overflow()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/impl.py\", line 143, in _do_get\n    return self._create_connection()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 256, in _create_connection\n    return _ConnectionRecord(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 371, in __init__\n    self.__connect()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 666, in __connect\n    pool.logger.debug(\"Error on connect(): %s\", e)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 661, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/create.py\", line 590, in connect\n    return dialect.connect(*cargs, **cparams)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 584, in connect\n    return self.dbapi.connect(*cargs, **cparams)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/__init__.py\", line 179, in connect\n    return MySQLConnection(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 95, in __init__\n    self.connect(**kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/abstracts.py\", line 716, in connect\n    self._open_connection()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 208, in _open_connection\n    self._do_auth(self._user, self._password,\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 137, in _do_auth\n    packet = self._protocol.make_auth(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/protocol.py\", line 99, in make_auth\n    packet += self._auth_response(client_flags, username, password,\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/protocol.py\", line 58, in _auth_response\n    auth = get_auth_plugin(auth_plugin)(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/authentication.py\", line 190, in get_auth_plugin\n    raise errors.NotSupportedError(\nmysql.connector.errors.NotSupportedError: Authentication plugin 'caching_sha2_password' is not supported\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 53, in send_DB_records\n    final_df.to_sql('core_ubertempcleaningrecords', engine, if_exists='append', index=False)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/core/generic.py\", line 2872, in to_sql\n    sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 717, in to_sql\n    pandas_sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1751, in to_sql\n    table = self.prep_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1650, in prep_table\n    table.create()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 856, in create\n    if self.exists():\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 840, in exists\n    return self.pd_sql.has_table(self.name, self.schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1783, in has_table\n    insp = sa.inspect(self.connectable)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/inspection.py\", line 64, in inspect\n    ret = reg(subject)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 182, in _engine_insp\n    return Inspector._construct(Inspector._init_engine, bind)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 117, in _construct\n    init(self, bind)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 128, in _init_engine\n    engine.connect().close()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 3197, in connect\n    return self._connection_cls(self, close_with_result=close_with_result)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 96, in __init__\n    else engine.raw_connection()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 3276, in raw_connection\n    return self._wrap_pool_connect(self.pool.connect, _connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 3246, in _wrap_pool_connect\n    Connection._handle_dbapi_exception_noconnection(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 2100, in _handle_dbapi_exception_noconnection\n    util.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 3243, in _wrap_pool_connect\n    return fn()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 310, in connect\n    return _ConnectionFairy._checkout(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 868, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 476, in checkout\n    rec = pool._do_get()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/impl.py\", line 146, in _do_get\n    self._dec_overflow()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/impl.py\", line 143, in _do_get\n    return self._create_connection()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 256, in _create_connection\n    return _ConnectionRecord(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 371, in __init__\n    self.__connect()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 666, in __connect\n    pool.logger.debug(\"Error on connect(): %s\", e)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 661, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/create.py\", line 590, in connect\n    return dialect.connect(*cargs, **cparams)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 584, in connect\n    return self.dbapi.connect(*cargs, **cparams)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/__init__.py\", line 179, in connect\n    return MySQLConnection(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 95, in __init__\n    self.connect(**kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/abstracts.py\", line 716, in connect\n    self._open_connection()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 208, in _open_connection\n    self._do_auth(self._user, self._password,\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 137, in _do_auth\n    packet = self._protocol.make_auth(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/protocol.py\", line 99, in make_auth\n    packet += self._auth_response(client_flags, username, password,\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/protocol.py\", line 58, in _auth_response\n    auth = get_auth_plugin(auth_plugin)(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/authentication.py\", line 190, in get_auth_plugin\n    raise errors.NotSupportedError(\nsqlalchemy.exc.NotSupportedError: (mysql.connector.errors.NotSupportedError) Authentication plugin 'caching_sha2_password' is not supported\n(Background on this error at: https://sqlalche.me/e/14/tw8g)\n",
   "Exiting the Program",
   "ERROR: Cleaning Records could not be sent to UberTempCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 3243, in _wrap_pool_connect\n    return fn()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 310, in connect\n    return _ConnectionFairy._checkout(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 868, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 476, in checkout\n    rec = pool._do_get()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/impl.py\", line 146, in _do_get\n    self._dec_overflow()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/impl.py\", line 143, in _do_get\n    return self._create_connection()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 256, in _create_connection\n    return _ConnectionRecord(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 371, in __init__\n    self.__connect()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 666, in __connect\n    pool.logger.debug(\"Error on connect(): %s\", e)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 661, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/create.py\", line 590, in connect\n    return dialect.connect(*cargs, **cparams)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 584, in connect\n    return self.dbapi.connect(*cargs, **cparams)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/__init__.py\", line 179, in connect\n    return MySQLConnection(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 95, in __init__\n    self.connect(**kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/abstracts.py\", line 716, in connect\n    self._open_connection()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 208, in _open_connection\n    self._do_auth(self._user, self._password,\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 137, in _do_auth\n    packet = self._protocol.make_auth(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/protocol.py\", line 99, in make_auth\n    packet += self._auth_response(client_flags, username, password,\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/protocol.py\", line 58, in _auth_response\n    auth = get_auth_plugin(auth_plugin)(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/authentication.py\", line 190, in get_auth_plugin\n    raise errors.NotSupportedError(\nmysql.connector.errors.NotSupportedError: Authentication plugin 'caching_sha2_password' is not supported\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 53, in send_DB_records\n    final_df.to_sql('core_ubertempcleaningrecords', engine, if_exists='append', index=False)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/core/generic.py\", line 2872, in to_sql\n    sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 717, in to_sql\n    pandas_sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1751, in to_sql\n    table = self.prep_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1650, in prep_table\n    table.create()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 856, in create\n    if self.exists():\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 840, in exists\n    return self.pd_sql.has_table(self.name, self.schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1783, in has_table\n    insp = sa.inspect(self.connectable)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/inspection.py\", line 64, in inspect\n    ret = reg(subject)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 182, in _engine_insp\n    return Inspector._construct(Inspector._init_engine, bind)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 117, in _construct\n    init(self, bind)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 128, in _init_engine\n    engine.connect().close()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 3197, in connect\n    return self._connection_cls(self, close_with_result=close_with_result)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 96, in __init__\n    else engine.raw_connection()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 3276, in raw_connection\n    return self._wrap_pool_connect(self.pool.connect, _connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 3246, in _wrap_pool_connect\n    Connection._handle_dbapi_exception_noconnection(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 2100, in _handle_dbapi_exception_noconnection\n    util.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 3243, in _wrap_pool_connect\n    return fn()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 310, in connect\n    return _ConnectionFairy._checkout(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 868, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 476, in checkout\n    rec = pool._do_get()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/impl.py\", line 146, in _do_get\n    self._dec_overflow()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/impl.py\", line 143, in _do_get\n    return self._create_connection()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 256, in _create_connection\n    return _ConnectionRecord(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 371, in __init__\n    self.__connect()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 666, in __connect\n    pool.logger.debug(\"Error on connect(): %s\", e)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 661, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/create.py\", line 590, in connect\n    return dialect.connect(*cargs, **cparams)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 584, in connect\n    return self.dbapi.connect(*cargs, **cparams)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/__init__.py\", line 179, in connect\n    return MySQLConnection(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 95, in __init__\n    self.connect(**kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/abstracts.py\", line 716, in connect\n    self._open_connection()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 208, in _open_connection\n    self._do_auth(self._user, self._password,\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 137, in _do_auth\n    packet = self._protocol.make_auth(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/protocol.py\", line 99, in make_auth\n    packet += self._auth_response(client_flags, username, password,\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/protocol.py\", line 58, in _auth_response\n    auth = get_auth_plugin(auth_plugin)(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/authentication.py\", line 190, in get_auth_plugin\n    raise errors.NotSupportedError(\nsqlalchemy.exc.NotSupportedError: (mysql.connector.errors.NotSupportedError) Authentication plugin 'caching_sha2_password' is not supported\n(Background on this error at: https://sqlalche.me/e/14/tw8g)\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 03-13-15 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully.",
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Records sent to database successfully",
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!",
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-15Dec-30Dec2021.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-15Dec-30Dec2021.pdf' to AWS Cloud!!!",
    "'Cleaning-record-15Dec-30Dec2021.pdf' uploaded to AWS Cloud successfully!!!",
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-15Dec-30Dec2021.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-15Dec-30Dec2021.pdf' to AWS Cloud!!!",
    "'Cleaning-record-15Dec-30Dec2021.pdf' uploaded to AWS Cloud successfully!!!"
   ],
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully.",
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Records sent to database successfully",
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!",
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-15Dec-30Dec2021.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-15Dec-30Dec2021.pdf' to AWS Cloud!!!",
    "'Cleaning-record-15Dec-30Dec2021.pdf' uploaded to AWS Cloud successfully!!!",
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-15Dec-30Dec2021.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-15Dec-30Dec2021.pdf' to AWS Cloud!!!",
    "'Cleaning-record-15Dec-30Dec2021.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 03-23-09 AM",
  "UberLogs": [
   "ERROR: Cleaning Records could not be sent to UberTempCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 3243, in _wrap_pool_connect\n    return fn()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 310, in connect\n    return _ConnectionFairy._checkout(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 868, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 476, in checkout\n    rec = pool._do_get()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/impl.py\", line 146, in _do_get\n    self._dec_overflow()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/impl.py\", line 143, in _do_get\n    return self._create_connection()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 256, in _create_connection\n    return _ConnectionRecord(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 371, in __init__\n    self.__connect()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 666, in __connect\n    pool.logger.debug(\"Error on connect(): %s\", e)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 661, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/create.py\", line 590, in connect\n    return dialect.connect(*cargs, **cparams)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 584, in connect\n    return self.dbapi.connect(*cargs, **cparams)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/__init__.py\", line 179, in connect\n    return MySQLConnection(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 95, in __init__\n    self.connect(**kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/abstracts.py\", line 716, in connect\n    self._open_connection()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 208, in _open_connection\n    self._do_auth(self._user, self._password,\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 137, in _do_auth\n    packet = self._protocol.make_auth(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/protocol.py\", line 99, in make_auth\n    packet += self._auth_response(client_flags, username, password,\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/protocol.py\", line 58, in _auth_response\n    auth = get_auth_plugin(auth_plugin)(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/authentication.py\", line 190, in get_auth_plugin\n    raise errors.NotSupportedError(\nmysql.connector.errors.NotSupportedError: Authentication plugin 'caching_sha2_password' is not supported\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 53, in send_DB_records\n    final_df.to_sql('core_ubertempcleaningrecords', engine, if_exists='append', index=False)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/core/generic.py\", line 2872, in to_sql\n    sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 717, in to_sql\n    pandas_sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1751, in to_sql\n    table = self.prep_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1650, in prep_table\n    table.create()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 856, in create\n    if self.exists():\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 840, in exists\n    return self.pd_sql.has_table(self.name, self.schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1783, in has_table\n    insp = sa.inspect(self.connectable)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/inspection.py\", line 64, in inspect\n    ret = reg(subject)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 182, in _engine_insp\n    return Inspector._construct(Inspector._init_engine, bind)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 117, in _construct\n    init(self, bind)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 128, in _init_engine\n    engine.connect().close()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 3197, in connect\n    return self._connection_cls(self, close_with_result=close_with_result)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 96, in __init__\n    else engine.raw_connection()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 3276, in raw_connection\n    return self._wrap_pool_connect(self.pool.connect, _connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 3246, in _wrap_pool_connect\n    Connection._handle_dbapi_exception_noconnection(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 2100, in _handle_dbapi_exception_noconnection\n    util.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 3243, in _wrap_pool_connect\n    return fn()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 310, in connect\n    return _ConnectionFairy._checkout(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 868, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 476, in checkout\n    rec = pool._do_get()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/impl.py\", line 146, in _do_get\n    self._dec_overflow()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/impl.py\", line 143, in _do_get\n    return self._create_connection()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 256, in _create_connection\n    return _ConnectionRecord(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 371, in __init__\n    self.__connect()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 666, in __connect\n    pool.logger.debug(\"Error on connect(): %s\", e)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 661, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/create.py\", line 590, in connect\n    return dialect.connect(*cargs, **cparams)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 584, in connect\n    return self.dbapi.connect(*cargs, **cparams)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/__init__.py\", line 179, in connect\n    return MySQLConnection(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 95, in __init__\n    self.connect(**kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/abstracts.py\", line 716, in connect\n    self._open_connection()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 208, in _open_connection\n    self._do_auth(self._user, self._password,\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 137, in _do_auth\n    packet = self._protocol.make_auth(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/protocol.py\", line 99, in make_auth\n    packet += self._auth_response(client_flags, username, password,\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/protocol.py\", line 58, in _auth_response\n    auth = get_auth_plugin(auth_plugin)(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/authentication.py\", line 190, in get_auth_plugin\n    raise errors.NotSupportedError(\nsqlalchemy.exc.NotSupportedError: (mysql.connector.errors.NotSupportedError) Authentication plugin 'caching_sha2_password' is not supported\n(Background on this error at: https://sqlalche.me/e/14/tw8g)\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 03-23-09 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-1Dec-15Dec2021.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-1Dec-15Dec2021.pdf' to AWS Cloud!!!",
    "'Cleaning-record-1Dec-15Dec2021.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 03-34-46 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-1Dec-15Dec2021.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-1Dec-15Dec2021.pdf' to AWS Cloud!!!",
    "'Cleaning-record-1Dec-15Dec2021.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-35-45 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp5.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp5.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp5.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-36-42 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 149, in get_certificate_ids\n    uber_driver = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-36-42 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 149, in get_certificate_ids\n    uber_driver = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program",
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 84, in process_and_save_cleaning_records\n    for certificateid in certificate_ids:\nTypeError: 'NoneType' object is not iterable\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-36-42 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records transferred to UberCleaningRecords successfully",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-39-38 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 149, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-39-38 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 149, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program",
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 84, in process_and_save_cleaning_records\n    for certificateid in certificate_ids:\nTypeError: 'NoneType' object is not iterable\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-39-38 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records transferred to UberCleaningRecords successfully",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-42-04 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 149, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-42-04 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 149, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program",
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 84, in process_and_save_cleaning_records\n    for certificateid in certificate_ids:\nTypeError: 'NoneType' object is not iterable\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-42-04 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records transferred to UberCleaningRecords successfully",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-44-34 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 149, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-44-34 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 149, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program",
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 84, in process_and_save_cleaning_records\n    for certificateid in certificate_ids:\nTypeError: 'NoneType' object is not iterable\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-44-34 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records transferred to UberCleaningRecords successfully",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-46-00 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 148, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-46-00 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 148, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program",
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 84, in process_and_save_cleaning_records\n    for certificateid in certificate_ids:\nTypeError: 'NoneType' object is not iterable\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-46-00 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records transferred to UberCleaningRecords successfully",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-48-06 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 142, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-48-06 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 142, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program",
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 83, in process_and_save_cleaning_records\n    for certificateid in certificate_ids:\nTypeError: 'NoneType' object is not iterable\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-48-06 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records transferred to UberCleaningRecords successfully",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-49-11 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 144, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-49-11 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 144, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program",
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 85, in process_and_save_cleaning_records\n    for certificateid in certificate_ids:\nTypeError: 'NoneType' object is not iterable\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-49-11 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records transferred to UberCleaningRecords successfully",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-51-52 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 142, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-51-52 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 142, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program",
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 85, in process_and_save_cleaning_records\n    for certificateid in certificate_ids:\nTypeError: 'NoneType' object is not iterable\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-51-52 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-56-50 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 142, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-56-50 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 142, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program",
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 85, in process_and_save_cleaning_records\n    for certificateid in certificate_ids:\nTypeError: 'NoneType' object is not iterable\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-56-50 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-57-23 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 143, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-57-23 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 143, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program",
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 85, in process_and_save_cleaning_records\n    for certificateid in certificate_ids:\nTypeError: 'NoneType' object is not iterable\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-57-23 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-57-56 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 143, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-57-56 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 143, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program",
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 85, in process_and_save_cleaning_records\n    for certificateid in certificate_ids:\nTypeError: 'NoneType' object is not iterable\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-57-56 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 143, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program",
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 85, in process_and_save_cleaning_records\n    for certificateid in certificate_ids:\nTypeError: 'NoneType' object is not iterable\n",
   "Exiting the Program",
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 143, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-57-56 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 143, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program",
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 85, in process_and_save_cleaning_records\n    for certificateid in certificate_ids:\nTypeError: 'NoneType' object is not iterable\n",
   "Exiting the Program",
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 143, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program",
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 85, in process_and_save_cleaning_records\n    for certificateid in certificate_ids:\nTypeError: 'NoneType' object is not iterable\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-57-56 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully.",
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully",
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!",
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully.",
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully",
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!",
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-57-56 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully.",
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully",
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!",
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully.",
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully",
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!",
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-59-08 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 144, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-59-08 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 144, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=conn)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program",
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 85, in process_and_save_cleaning_records\n    for certificateid in certificate_ids:\nTypeError: 'NoneType' object is not iterable\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-59-08 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-59-22 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 144, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=engine)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-59-22 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 144, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=engine)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program",
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 85, in process_and_save_cleaning_records\n    for certificateid in certificate_ids:\nTypeError: 'NoneType' object is not iterable\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 09-59-22 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-00-21 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 144, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=engine)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-00-21 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 144, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=engine)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program",
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 85, in process_and_save_cleaning_records\n    for certificateid in certificate_ids:\nTypeError: 'NoneType' object is not iterable\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-00-21 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-09-17 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 144, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=engine)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-09-17 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 144, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=engine)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program",
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 85, in process_and_save_cleaning_records\n    for certificateid in certificate_ids:\nTypeError: 'NoneType' object is not iterable\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-09-17 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-13-14 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 134, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=engine)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-13-14 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-13-43 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-15-00 AM",
  "UberLogs": [
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nmysql.connector.errors.ProgrammingError: 1054 (42S22): Unknown column 'Passenger_hightouch_surfaces_cleaned' in 'field list'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 90, in process_and_save_cleaning_records\n    cleaning_records_df.to_sql('core_ubercleaningrecords', engine, if_exists='append', index=False)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/core/generic.py\", line 2872, in to_sql\n    sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 717, in to_sql\n    pandas_sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1761, in to_sql\n    sql_engine.insert_records(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1350, in insert_records\n    raise err\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1340, in insert_records\n    table.insert(chunksize=chunksize, method=method)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 967, in insert\n    exec_insert(conn, keys, chunk_iter)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 882, in _execute_insert\n    conn.execute(self.table.insert(), data)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1289, in execute\n    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/elements.py\", line 325, in _execute_on_connection\n    return connection._execute_clauseelement(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1481, in _execute_clauseelement\n    ret = self._execute_context(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1845, in _execute_context\n    self._handle_dbapi_exception(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 2026, in _handle_dbapi_exception\n    util.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nsqlalchemy.exc.ProgrammingError: (mysql.connector.errors.ProgrammingError) 1054 (42S22): Unknown column 'Passenger_hightouch_surfaces_cleaned' in 'field list'\n[SQL: INSERT INTO core_ubercleaningrecords (`Date_and_time_of_trip`, `Date_and_Time_of_clean`, driver_id_id, driver_certificate_id, `Passenger_hightouch_surfaces_cleaned`, `Driver_hightouch_surfaces_cleaned`) VALUES (%(Date_and_time_of_trip)s, %(Date_and_Time_of_clean)s, %(driver_id_id)s, %(driver_certificate_id)s, %(Passenger_hightouch_surfaces_cleaned)s, %(Driver_hightouch_surfaces_cleaned)s)]\n[parameters: ({'Date_and_time_of_trip': '24 Aug, 2021 02:31 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:23 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 02:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:35 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:35 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:50 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:44 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:00 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:52 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:15 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 04:13 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'})]\n(Background on this error at: https://sqlalche.me/e/14/f405)\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-15-00 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-17-02 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 142, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=engine)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-17-02 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 142, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=engine)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program",
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 83, in process_and_save_cleaning_records\n    for certificateid in certificate_ids:\nTypeError: 'NoneType' object is not iterable\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-17-02 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-17-02 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 142, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=engine)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program",
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 83, in process_and_save_cleaning_records\n    for certificateid in certificate_ids:\nTypeError: 'NoneType' object is not iterable\n",
   "Exiting the Program",
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 142, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=engine)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-17-02 AM",
  "UberLogs": [
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 142, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=engine)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program",
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 83, in process_and_save_cleaning_records\n    for certificateid in certificate_ids:\nTypeError: 'NoneType' object is not iterable\n",
   "Exiting the Program",
   "ERROR: Connection cannot be established with the database.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 142, in get_certificate_ids\n    uber_driver_certificate = db.Table('core_uberdrivercpvvcertificate', metadata, autoload=True, autoload_with=engine)\n  File \"<string>\", line 2, in __new__\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 309, in warned\n    return fn(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 607, in __new__\n    metadata._remove_table(name, schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 602, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 677, in _init\n    self._autoload(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 712, in _autoload\n    conn_insp.reflect_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 795, in reflect_table\n    self._reflect_fk(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 948, in _reflect_fk\n    fkeys = self.get_foreign_keys(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 564, in get_foreign_keys\n    return self.dialect.get_foreign_keys(\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2876, in get_foreign_keys\n    self._correct_for_mysql_bugs_88718_96365(fkeys, connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/dialects/mysql/base.py\", line 2943, in _correct_for_mysql_bugs_88718_96365\n    d[(lower(schema), lower(tname))][\"SCHEMANAME\"] = schema\nTypeError: unhashable type: 'bytearray'\n",
   "Exiting the Program",
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 83, in process_and_save_cleaning_records\n    for certificateid in certificate_ids:\nTypeError: 'NoneType' object is not iterable\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-17-02 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully.",
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully",
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!",
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!",
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ],
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully.",
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully",
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!",
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!",
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-31-21 AM",
  "UberLogs": [
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nmysql.connector.errors.ProgrammingError: 1054 (42S22): Unknown column 'Passenger_hightouch_surfaces_cleaned' in 'field list'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 90, in process_and_save_cleaning_records\n    cleaning_records_df.to_sql('core_ubercleaningrecords', engine, if_exists='append', index=False)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/core/generic.py\", line 2872, in to_sql\n    sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 717, in to_sql\n    pandas_sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1761, in to_sql\n    sql_engine.insert_records(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1350, in insert_records\n    raise err\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1340, in insert_records\n    table.insert(chunksize=chunksize, method=method)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 967, in insert\n    exec_insert(conn, keys, chunk_iter)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 882, in _execute_insert\n    conn.execute(self.table.insert(), data)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1289, in execute\n    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/elements.py\", line 325, in _execute_on_connection\n    return connection._execute_clauseelement(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1481, in _execute_clauseelement\n    ret = self._execute_context(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1845, in _execute_context\n    self._handle_dbapi_exception(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 2026, in _handle_dbapi_exception\n    util.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nsqlalchemy.exc.ProgrammingError: (mysql.connector.errors.ProgrammingError) 1054 (42S22): Unknown column 'Passenger_hightouch_surfaces_cleaned' in 'field list'\n[SQL: INSERT INTO core_ubercleaningrecords (`Date_and_time_of_trip`, `Date_and_Time_of_clean`, driver_id_id, driver_certificate_id, `Passenger_hightouch_surfaces_cleaned`, `Driver_hightouch_surfaces_cleaned`) VALUES (%(Date_and_time_of_trip)s, %(Date_and_Time_of_clean)s, %(driver_id_id)s, %(driver_certificate_id)s, %(Passenger_hightouch_surfaces_cleaned)s, %(Driver_hightouch_surfaces_cleaned)s)]\n[parameters: ({'Date_and_time_of_trip': '24 Aug, 2021 02:31 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:29 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 02:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:35 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:33 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:50 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:47 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:00 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:56 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:15 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 04:08 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'})]\n(Background on this error at: https://sqlalche.me/e/14/f405)\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-31-21 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-32-52 AM",
  "UberLogs": [
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nmysql.connector.errors.ProgrammingError: 1054 (42S22): Unknown column 'Passenger_hightouch_surfaces_cleaned' in 'field list'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 90, in process_and_save_cleaning_records\n    cleaning_records_df.to_sql('core_ubercleaningrecords', engine, if_exists='append', index=False)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/core/generic.py\", line 2872, in to_sql\n    sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 717, in to_sql\n    pandas_sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1761, in to_sql\n    sql_engine.insert_records(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1350, in insert_records\n    raise err\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1340, in insert_records\n    table.insert(chunksize=chunksize, method=method)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 967, in insert\n    exec_insert(conn, keys, chunk_iter)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 882, in _execute_insert\n    conn.execute(self.table.insert(), data)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1289, in execute\n    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/elements.py\", line 325, in _execute_on_connection\n    return connection._execute_clauseelement(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1481, in _execute_clauseelement\n    ret = self._execute_context(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1845, in _execute_context\n    self._handle_dbapi_exception(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 2026, in _handle_dbapi_exception\n    util.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nsqlalchemy.exc.ProgrammingError: (mysql.connector.errors.ProgrammingError) 1054 (42S22): Unknown column 'Passenger_hightouch_surfaces_cleaned' in 'field list'\n[SQL: INSERT INTO core_ubercleaningrecords (`Date_and_time_of_trip`, `Date_and_Time_of_clean`, driver_id_id, driver_certificate_id, `Passenger_hightouch_surfaces_cleaned`, `Driver_hightouch_surfaces_cleaned`) VALUES (%(Date_and_time_of_trip)s, %(Date_and_Time_of_clean)s, %(driver_id_id)s, %(driver_certificate_id)s, %(Passenger_hightouch_surfaces_cleaned)s, %(Driver_hightouch_surfaces_cleaned)s)]\n[parameters: ({'Date_and_time_of_trip': '24 Aug, 2021 02:31 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:29 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 02:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:37 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:32 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:50 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:45 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:00 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:54 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:15 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 04:09 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'})]\n(Background on this error at: https://sqlalche.me/e/14/f405)\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-32-52 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-32-52 AM",
  "UberLogs": [
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nmysql.connector.errors.ProgrammingError: 1054 (42S22): Unknown column 'Passenger_hightouch_surfaces_cleaned' in 'field list'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 90, in process_and_save_cleaning_records\n    cleaning_records_df.to_sql('core_ubercleaningrecords', engine, if_exists='append', index=False)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/core/generic.py\", line 2872, in to_sql\n    sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 717, in to_sql\n    pandas_sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1761, in to_sql\n    sql_engine.insert_records(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1350, in insert_records\n    raise err\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1340, in insert_records\n    table.insert(chunksize=chunksize, method=method)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 967, in insert\n    exec_insert(conn, keys, chunk_iter)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 882, in _execute_insert\n    conn.execute(self.table.insert(), data)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1289, in execute\n    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/elements.py\", line 325, in _execute_on_connection\n    return connection._execute_clauseelement(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1481, in _execute_clauseelement\n    ret = self._execute_context(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1845, in _execute_context\n    self._handle_dbapi_exception(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 2026, in _handle_dbapi_exception\n    util.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nsqlalchemy.exc.ProgrammingError: (mysql.connector.errors.ProgrammingError) 1054 (42S22): Unknown column 'Passenger_hightouch_surfaces_cleaned' in 'field list'\n[SQL: INSERT INTO core_ubercleaningrecords (`Date_and_time_of_trip`, `Date_and_Time_of_clean`, driver_id_id, driver_certificate_id, `Passenger_hightouch_surfaces_cleaned`, `Driver_hightouch_surfaces_cleaned`) VALUES (%(Date_and_time_of_trip)s, %(Date_and_Time_of_clean)s, %(driver_id_id)s, %(driver_certificate_id)s, %(Passenger_hightouch_surfaces_cleaned)s, %(Driver_hightouch_surfaces_cleaned)s)]\n[parameters: ({'Date_and_time_of_trip': '24 Aug, 2021 02:31 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:29 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 02:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:37 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:32 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:50 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:45 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:00 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:54 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:15 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 04:09 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'})]\n(Background on this error at: https://sqlalche.me/e/14/f405)\n",
   "Exiting the Program",
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nmysql.connector.errors.ProgrammingError: 1054 (42S22): Unknown column 'Passenger_hightouch_surfaces_cleaned' in 'field list'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 90, in process_and_save_cleaning_records\n    cleaning_records_df.to_sql('core_ubercleaningrecords', engine, if_exists='append', index=False)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/core/generic.py\", line 2872, in to_sql\n    sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 717, in to_sql\n    pandas_sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1761, in to_sql\n    sql_engine.insert_records(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1350, in insert_records\n    raise err\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1340, in insert_records\n    table.insert(chunksize=chunksize, method=method)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 967, in insert\n    exec_insert(conn, keys, chunk_iter)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 882, in _execute_insert\n    conn.execute(self.table.insert(), data)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1289, in execute\n    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/elements.py\", line 325, in _execute_on_connection\n    return connection._execute_clauseelement(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1481, in _execute_clauseelement\n    ret = self._execute_context(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1845, in _execute_context\n    self._handle_dbapi_exception(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 2026, in _handle_dbapi_exception\n    util.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nsqlalchemy.exc.ProgrammingError: (mysql.connector.errors.ProgrammingError) 1054 (42S22): Unknown column 'Passenger_hightouch_surfaces_cleaned' in 'field list'\n[SQL: INSERT INTO core_ubercleaningrecords (`Date_and_time_of_trip`, `Date_and_Time_of_clean`, driver_id_id, driver_certificate_id, `Passenger_hightouch_surfaces_cleaned`, `Driver_hightouch_surfaces_cleaned`) VALUES (%(Date_and_time_of_trip)s, %(Date_and_Time_of_clean)s, %(driver_id_id)s, %(driver_certificate_id)s, %(Passenger_hightouch_surfaces_cleaned)s, %(Driver_hightouch_surfaces_cleaned)s)]\n[parameters: ({'Date_and_time_of_trip': '24 Aug, 2021 02:31 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:28 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 02:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:38 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:35 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:50 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:45 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:00 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:52 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:15 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 04:08 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'})]\n(Background on this error at: https://sqlalche.me/e/14/f405)\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-32-52 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully.",
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully",
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!",
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!",
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ],
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully.",
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully",
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!",
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!",
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-36-05 AM",
  "UberLogs": [
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nmysql.connector.errors.ProgrammingError: 1054 (42S22): Unknown column 'Passenger_hightouch_surfaces_cleaned' in 'field list'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 90, in process_and_save_cleaning_records\n    cleaning_records_df.to_sql('core_ubercleaningrecords', engine, if_exists='append', index=False)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/core/generic.py\", line 2872, in to_sql\n    sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 717, in to_sql\n    pandas_sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1761, in to_sql\n    sql_engine.insert_records(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1350, in insert_records\n    raise err\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1340, in insert_records\n    table.insert(chunksize=chunksize, method=method)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 967, in insert\n    exec_insert(conn, keys, chunk_iter)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 882, in _execute_insert\n    conn.execute(self.table.insert(), data)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1289, in execute\n    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/elements.py\", line 325, in _execute_on_connection\n    return connection._execute_clauseelement(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1481, in _execute_clauseelement\n    ret = self._execute_context(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1845, in _execute_context\n    self._handle_dbapi_exception(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 2026, in _handle_dbapi_exception\n    util.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nsqlalchemy.exc.ProgrammingError: (mysql.connector.errors.ProgrammingError) 1054 (42S22): Unknown column 'Passenger_hightouch_surfaces_cleaned' in 'field list'\n[SQL: INSERT INTO core_ubercleaningrecords (`Date_and_time_of_trip`, `Date_and_Time_of_clean`, driver_id_id, driver_certificate_id, `Passenger_hightouch_surfaces_cleaned`, `Driver_hightouch_surfaces_cleaned`) VALUES (%(Date_and_time_of_trip)s, %(Date_and_Time_of_clean)s, %(driver_id_id)s, %(driver_certificate_id)s, %(Passenger_hightouch_surfaces_cleaned)s, %(Driver_hightouch_surfaces_cleaned)s)]\n[parameters: ({'Date_and_time_of_trip': '24 Aug, 2021 02:31 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:28 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 02:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:36 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:34 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:50 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:48 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:00 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:53 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:15 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 04:07 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'Passenger_hightouch_surfaces_cleaned': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'})]\n(Background on this error at: https://sqlalche.me/e/14/f405)\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-36-05 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-38-48 AM",
  "UberLogs": [
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nmysql.connector.errors.ProgrammingError: 1054 (42S22): Unknown column 'Driver_hightouch_surfaces_cleaned' in 'field list'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 90, in process_and_save_cleaning_records\n    cleaning_records_df.to_sql('core_ubercleaningrecords', engine, if_exists='append', index=False)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/core/generic.py\", line 2872, in to_sql\n    sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 717, in to_sql\n    pandas_sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1761, in to_sql\n    sql_engine.insert_records(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1350, in insert_records\n    raise err\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1340, in insert_records\n    table.insert(chunksize=chunksize, method=method)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 967, in insert\n    exec_insert(conn, keys, chunk_iter)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 882, in _execute_insert\n    conn.execute(self.table.insert(), data)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1289, in execute\n    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/elements.py\", line 325, in _execute_on_connection\n    return connection._execute_clauseelement(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1481, in _execute_clauseelement\n    ret = self._execute_context(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1845, in _execute_context\n    self._handle_dbapi_exception(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 2026, in _handle_dbapi_exception\n    util.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nsqlalchemy.exc.ProgrammingError: (mysql.connector.errors.ProgrammingError) 1054 (42S22): Unknown column 'Driver_hightouch_surfaces_cleaned' in 'field list'\n[SQL: INSERT INTO core_ubercleaningrecords (`Date_and_time_of_trip`, `Date_and_Time_of_clean`, driver_id_id, driver_certificate_id, passenger_high_touch_surfaces, `Driver_hightouch_surfaces_cleaned`) VALUES (%(Date_and_time_of_trip)s, %(Date_and_Time_of_clean)s, %(driver_id_id)s, %(driver_certificate_id)s, %(passenger_high_touch_surfaces)s, %(Driver_hightouch_surfaces_cleaned)s)]\n[parameters: ({'Date_and_time_of_trip': '24 Aug, 2021 02:31 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:26 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 02:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:34 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:34 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:50 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:46 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:00 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:53 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:15 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 04:08 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'Driver_hightouch_surfaces_cleaned': 'Y'})]\n(Background on this error at: https://sqlalche.me/e/14/f405)\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-38-48 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-39-52 AM",
  "UberLogs": [
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nmysql.connector.errors.ProgrammingError: 1054 (42S22): Unknown column 'driver_hightouch_surfaces_cleaned' in 'field list'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 92, in process_and_save_cleaning_records\n    cleaning_records_df.to_sql('core_ubercleaningrecords', engine, if_exists='append', index=False)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/core/generic.py\", line 2872, in to_sql\n    sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 717, in to_sql\n    pandas_sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1761, in to_sql\n    sql_engine.insert_records(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1350, in insert_records\n    raise err\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1340, in insert_records\n    table.insert(chunksize=chunksize, method=method)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 967, in insert\n    exec_insert(conn, keys, chunk_iter)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 882, in _execute_insert\n    conn.execute(self.table.insert(), data)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1289, in execute\n    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/elements.py\", line 325, in _execute_on_connection\n    return connection._execute_clauseelement(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1481, in _execute_clauseelement\n    ret = self._execute_context(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1845, in _execute_context\n    self._handle_dbapi_exception(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 2026, in _handle_dbapi_exception\n    util.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nsqlalchemy.exc.ProgrammingError: (mysql.connector.errors.ProgrammingError) 1054 (42S22): Unknown column 'driver_hightouch_surfaces_cleaned' in 'field list'\n[SQL: INSERT INTO core_ubercleaningrecords (`Date_and_time_of_trip`, `Date_and_Time_of_clean`, driver_id_id, driver_certificate_id, passenger_high_touch_surfaces, driver_hightouch_surfaces_cleaned) VALUES (%(Date_and_time_of_trip)s, %(Date_and_Time_of_clean)s, %(driver_id_id)s, %(driver_certificate_id)s, %(passenger_high_touch_surfaces)s, %(driver_hightouch_surfaces_cleaned)s)]\n[parameters: ({'Date_and_time_of_trip': '24 Aug, 2021 02:31 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:24 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 02:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:35 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:38 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:50 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:46 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:00 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:55 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_hightouch_surfaces_cleaned': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:15 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 04:07 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_hightouch_surfaces_cleaned': 'Y'})]\n(Background on this error at: https://sqlalche.me/e/14/f405)\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-39-52 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-41-06 AM",
  "UberLogs": [
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nmysql.connector.errors.DataError: 1292 (22007): Incorrect datetime value: '24 Aug, 2021 02:31 PM' for column 'date_and_time_of_trip' at row 1\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 92, in process_and_save_cleaning_records\n    cleaning_records_df.to_sql('core_ubercleaningrecords', engine, if_exists='append', index=False)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/core/generic.py\", line 2872, in to_sql\n    sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 717, in to_sql\n    pandas_sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1761, in to_sql\n    sql_engine.insert_records(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1350, in insert_records\n    raise err\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1340, in insert_records\n    table.insert(chunksize=chunksize, method=method)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 967, in insert\n    exec_insert(conn, keys, chunk_iter)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 882, in _execute_insert\n    conn.execute(self.table.insert(), data)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1289, in execute\n    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/elements.py\", line 325, in _execute_on_connection\n    return connection._execute_clauseelement(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1481, in _execute_clauseelement\n    ret = self._execute_context(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1845, in _execute_context\n    self._handle_dbapi_exception(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 2026, in _handle_dbapi_exception\n    util.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nsqlalchemy.exc.DataError: (mysql.connector.errors.DataError) 1292 (22007): Incorrect datetime value: '24 Aug, 2021 02:31 PM' for column 'date_and_time_of_trip' at row 1\n[SQL: INSERT INTO core_ubercleaningrecords (`Date_and_time_of_trip`, `Date_and_Time_of_clean`, driver_id_id, driver_certificate_id, passenger_high_touch_surfaces, driver_high_touch_surfaces) VALUES (%(Date_and_time_of_trip)s, %(Date_and_Time_of_clean)s, %(driver_id_id)s, %(driver_certificate_id)s, %(passenger_high_touch_surfaces)s, %(driver_high_touch_surfaces)s)]\n[parameters: ({'Date_and_time_of_trip': '24 Aug, 2021 02:31 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:28 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 02:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:38 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:37 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:50 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:42 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:00 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:55 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:15 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 04:09 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'})]\n(Background on this error at: https://sqlalche.me/e/14/9h9h)\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 10-41-06 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 11-03-42 AM",
  "UberLogs": [
   "ERROR: Cleaning Records could not be sent to UberTempCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 3243, in _wrap_pool_connect\n    return fn()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 310, in connect\n    return _ConnectionFairy._checkout(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 868, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 476, in checkout\n    rec = pool._do_get()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/impl.py\", line 146, in _do_get\n    self._dec_overflow()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/impl.py\", line 143, in _do_get\n    return self._create_connection()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 256, in _create_connection\n    return _ConnectionRecord(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 371, in __init__\n    self.__connect()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 666, in __connect\n    pool.logger.debug(\"Error on connect(): %s\", e)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 661, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/create.py\", line 590, in connect\n    return dialect.connect(*cargs, **cparams)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 584, in connect\n    return self.dbapi.connect(*cargs, **cparams)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/__init__.py\", line 179, in connect\n    return MySQLConnection(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 95, in __init__\n    self.connect(**kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/abstracts.py\", line 716, in connect\n    self._open_connection()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 208, in _open_connection\n    self._do_auth(self._user, self._password,\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 144, in _do_auth\n    self._auth_switch_request(username, password)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 167, in _auth_switch_request\n    auth = get_auth_plugin(new_auth_plugin)(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/authentication.py\", line 190, in get_auth_plugin\n    raise errors.NotSupportedError(\nmysql.connector.errors.NotSupportedError: Authentication plugin 'caching_sha2_password' is not supported\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 60, in send_DB_records\n    final_df.to_sql('core_ubertempcleaningrecords', engine, if_exists='append', index=False)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/core/generic.py\", line 2872, in to_sql\n    sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 717, in to_sql\n    pandas_sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1751, in to_sql\n    table = self.prep_table(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1650, in prep_table\n    table.create()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 856, in create\n    if self.exists():\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 840, in exists\n    return self.pd_sql.has_table(self.name, self.schema)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1783, in has_table\n    insp = sa.inspect(self.connectable)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/inspection.py\", line 64, in inspect\n    ret = reg(subject)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 182, in _engine_insp\n    return Inspector._construct(Inspector._init_engine, bind)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 117, in _construct\n    init(self, bind)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 128, in _init_engine\n    engine.connect().close()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 3197, in connect\n    return self._connection_cls(self, close_with_result=close_with_result)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 96, in __init__\n    else engine.raw_connection()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 3276, in raw_connection\n    return self._wrap_pool_connect(self.pool.connect, _connection)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 3246, in _wrap_pool_connect\n    Connection._handle_dbapi_exception_noconnection(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 2100, in _handle_dbapi_exception_noconnection\n    util.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 3243, in _wrap_pool_connect\n    return fn()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 310, in connect\n    return _ConnectionFairy._checkout(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 868, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 476, in checkout\n    rec = pool._do_get()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/impl.py\", line 146, in _do_get\n    self._dec_overflow()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/impl.py\", line 143, in _do_get\n    return self._create_connection()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 256, in _create_connection\n    return _ConnectionRecord(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 371, in __init__\n    self.__connect()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 666, in __connect\n    pool.logger.debug(\"Error on connect(): %s\", e)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/pool/base.py\", line 661, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/create.py\", line 590, in connect\n    return dialect.connect(*cargs, **cparams)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 584, in connect\n    return self.dbapi.connect(*cargs, **cparams)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/__init__.py\", line 179, in connect\n    return MySQLConnection(*args, **kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 95, in __init__\n    self.connect(**kwargs)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/abstracts.py\", line 716, in connect\n    self._open_connection()\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 208, in _open_connection\n    self._do_auth(self._user, self._password,\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 144, in _do_auth\n    self._auth_switch_request(username, password)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 167, in _auth_switch_request\n    auth = get_auth_plugin(new_auth_plugin)(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/authentication.py\", line 190, in get_auth_plugin\n    raise errors.NotSupportedError(\nsqlalchemy.exc.NotSupportedError: (mysql.connector.errors.NotSupportedError) Authentication plugin 'caching_sha2_password' is not supported\n(Background on this error at: https://sqlalche.me/e/14/tw8g)\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 11-03-42 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp4.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp4.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp4.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 11-10-35 AM",
  "UberLogs": [
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nmysql.connector.errors.DatabaseError: 1366 (HY000): Incorrect integer value: 'Manmeet' for column 'driver_id_id' at row 1\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 92, in process_and_save_cleaning_records\n    cleaning_records_df.to_sql('core_ubercleaningrecords', engine, if_exists='append', index=False)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/core/generic.py\", line 2872, in to_sql\n    sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 717, in to_sql\n    pandas_sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1761, in to_sql\n    sql_engine.insert_records(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1350, in insert_records\n    raise err\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1340, in insert_records\n    table.insert(chunksize=chunksize, method=method)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 967, in insert\n    exec_insert(conn, keys, chunk_iter)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 882, in _execute_insert\n    conn.execute(self.table.insert(), data)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1289, in execute\n    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/elements.py\", line 325, in _execute_on_connection\n    return connection._execute_clauseelement(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1481, in _execute_clauseelement\n    ret = self._execute_context(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1845, in _execute_context\n    self._handle_dbapi_exception(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 2026, in _handle_dbapi_exception\n    util.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nsqlalchemy.exc.DatabaseError: (mysql.connector.errors.DatabaseError) 1366 (HY000): Incorrect integer value: 'Manmeet' for column 'driver_id_id' at row 1\n[SQL: INSERT INTO core_ubercleaningrecords (`Date_and_time_of_trip`, `Date_and_Time_of_clean`, driver_id_id, driver_certificate_id, passenger_high_touch_surfaces, driver_high_touch_surfaces) VALUES (%(Date_and_time_of_trip)s, %(Date_and_Time_of_clean)s, %(driver_id_id)s, %(driver_certificate_id)s, %(passenger_high_touch_surfaces)s, %(driver_high_touch_surfaces)s)]\n[parameters: ({'Date_and_time_of_trip': '24 Aug, 2021 02:31 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:23 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 02:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:37 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:36 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:50 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:45 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:00 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:55 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:15 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 04:10 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'})]\n(Background on this error at: https://sqlalche.me/e/14/4xp6)\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 11-10-35 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp4.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp4.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp4.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 11-12-27 AM",
  "UberLogs": [
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nmysql.connector.errors.DatabaseError: 1366 (HY000): Incorrect integer value: 'Manmeet' for column 'driver_id_id' at row 1\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 94, in process_and_save_cleaning_records\n    cleaning_records_df.to_sql('core_ubercleaningrecords', engine, if_exists='append', index=False)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/core/generic.py\", line 2872, in to_sql\n    sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 717, in to_sql\n    pandas_sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1761, in to_sql\n    sql_engine.insert_records(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1350, in insert_records\n    raise err\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1340, in insert_records\n    table.insert(chunksize=chunksize, method=method)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 967, in insert\n    exec_insert(conn, keys, chunk_iter)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 882, in _execute_insert\n    conn.execute(self.table.insert(), data)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1289, in execute\n    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/elements.py\", line 325, in _execute_on_connection\n    return connection._execute_clauseelement(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1481, in _execute_clauseelement\n    ret = self._execute_context(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1845, in _execute_context\n    self._handle_dbapi_exception(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 2026, in _handle_dbapi_exception\n    util.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nsqlalchemy.exc.DatabaseError: (mysql.connector.errors.DatabaseError) 1366 (HY000): Incorrect integer value: 'Manmeet' for column 'driver_id_id' at row 1\n[SQL: INSERT INTO core_ubercleaningrecords (`Date_and_time_of_trip`, `Date_and_Time_of_clean`, driver_id_id, driver_certificate_id, passenger_high_touch_surfaces, driver_high_touch_surfaces) VALUES (%(Date_and_time_of_trip)s, %(Date_and_Time_of_clean)s, %(driver_id_id)s, %(driver_certificate_id)s, %(passenger_high_touch_surfaces)s, %(driver_high_touch_surfaces)s)]\n[parameters: ({'Date_and_time_of_trip': '24 Aug, 2021 02:31 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:28 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 02:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:34 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:37 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:50 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:48 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:00 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:58 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:15 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 04:13 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'})]\n(Background on this error at: https://sqlalche.me/e/14/4xp6)\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 11-12-27 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp4.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp4.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp4.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 11-13-04 AM",
  "UberLogs": [
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nmysql.connector.errors.DatabaseError: 1366 (HY000): Incorrect integer value: 'Manmeet' for column 'driver_id_id' at row 1\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 94, in process_and_save_cleaning_records\n    cleaning_records_df.to_sql('core_ubercleaningrecords', engine, if_exists='append', index=False)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/core/generic.py\", line 2872, in to_sql\n    sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 717, in to_sql\n    pandas_sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1761, in to_sql\n    sql_engine.insert_records(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1350, in insert_records\n    raise err\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1340, in insert_records\n    table.insert(chunksize=chunksize, method=method)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 967, in insert\n    exec_insert(conn, keys, chunk_iter)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 882, in _execute_insert\n    conn.execute(self.table.insert(), data)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1289, in execute\n    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/elements.py\", line 325, in _execute_on_connection\n    return connection._execute_clauseelement(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1481, in _execute_clauseelement\n    ret = self._execute_context(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1845, in _execute_context\n    self._handle_dbapi_exception(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 2026, in _handle_dbapi_exception\n    util.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nsqlalchemy.exc.DatabaseError: (mysql.connector.errors.DatabaseError) 1366 (HY000): Incorrect integer value: 'Manmeet' for column 'driver_id_id' at row 1\n[SQL: INSERT INTO core_ubercleaningrecords (`Date_and_time_of_trip`, `Date_and_Time_of_clean`, driver_id_id, driver_certificate_id, passenger_high_touch_surfaces, driver_high_touch_surfaces) VALUES (%(Date_and_time_of_trip)s, %(Date_and_Time_of_clean)s, %(driver_id_id)s, %(driver_certificate_id)s, %(passenger_high_touch_surfaces)s, %(driver_high_touch_surfaces)s)]\n[parameters: ({'Date_and_time_of_trip': '24 Aug, 2021 02:31 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:29 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 02:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:34 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:38 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:50 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:46 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:00 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:54 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:15 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 04:07 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'})]\n(Background on this error at: https://sqlalche.me/e/14/4xp6)\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 11-13-04 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp4.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp4.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp4.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 11-13-40 AM",
  "UberLogs": [
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nmysql.connector.errors.DatabaseError: 1366 (HY000): Incorrect integer value: 'Manmeet' for column 'driver_id_id' at row 1\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 95, in process_and_save_cleaning_records\n    cleaning_records_df.to_sql('core_ubercleaningrecords', engine, if_exists='append', index=False)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/core/generic.py\", line 2872, in to_sql\n    sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 717, in to_sql\n    pandas_sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1761, in to_sql\n    sql_engine.insert_records(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1350, in insert_records\n    raise err\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1340, in insert_records\n    table.insert(chunksize=chunksize, method=method)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 967, in insert\n    exec_insert(conn, keys, chunk_iter)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 882, in _execute_insert\n    conn.execute(self.table.insert(), data)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1289, in execute\n    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/elements.py\", line 325, in _execute_on_connection\n    return connection._execute_clauseelement(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1481, in _execute_clauseelement\n    ret = self._execute_context(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1845, in _execute_context\n    self._handle_dbapi_exception(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 2026, in _handle_dbapi_exception\n    util.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nsqlalchemy.exc.DatabaseError: (mysql.connector.errors.DatabaseError) 1366 (HY000): Incorrect integer value: 'Manmeet' for column 'driver_id_id' at row 1\n[SQL: INSERT INTO core_ubercleaningrecords (`Date_and_time_of_trip`, `Date_and_Time_of_clean`, driver_id_id, driver_certificate_id, passenger_high_touch_surfaces, driver_high_touch_surfaces) VALUES (%(Date_and_time_of_trip)s, %(Date_and_Time_of_clean)s, %(driver_id_id)s, %(driver_certificate_id)s, %(passenger_high_touch_surfaces)s, %(driver_high_touch_surfaces)s)]\n[parameters: ({'Date_and_time_of_trip': '24 Aug, 2021 02:31 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:26 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 02:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:38 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:35 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:50 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:42 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:00 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:52 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:15 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 04:07 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'})]\n(Background on this error at: https://sqlalche.me/e/14/4xp6)\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 11-13-40 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp4.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp4.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp4.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 11-14-34 AM",
  "UberLogs": [
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nmysql.connector.errors.DatabaseError: 1366 (HY000): Incorrect integer value: 'Manmeet' for column 'driver_id_id' at row 1\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 97, in process_and_save_cleaning_records\n    cleaning_records_df.to_sql('core_ubercleaningrecords', engine, if_exists='append', index=False)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/core/generic.py\", line 2872, in to_sql\n    sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 717, in to_sql\n    pandas_sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1761, in to_sql\n    sql_engine.insert_records(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1350, in insert_records\n    raise err\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1340, in insert_records\n    table.insert(chunksize=chunksize, method=method)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 967, in insert\n    exec_insert(conn, keys, chunk_iter)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 882, in _execute_insert\n    conn.execute(self.table.insert(), data)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1289, in execute\n    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/elements.py\", line 325, in _execute_on_connection\n    return connection._execute_clauseelement(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1481, in _execute_clauseelement\n    ret = self._execute_context(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1845, in _execute_context\n    self._handle_dbapi_exception(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 2026, in _handle_dbapi_exception\n    util.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nsqlalchemy.exc.DatabaseError: (mysql.connector.errors.DatabaseError) 1366 (HY000): Incorrect integer value: 'Manmeet' for column 'driver_id_id' at row 1\n[SQL: INSERT INTO core_ubercleaningrecords (`Date_and_time_of_trip`, `Date_and_Time_of_clean`, driver_id_id, driver_certificate_id, passenger_high_touch_surfaces, driver_high_touch_surfaces) VALUES (%(Date_and_time_of_trip)s, %(Date_and_Time_of_clean)s, %(driver_id_id)s, %(driver_certificate_id)s, %(passenger_high_touch_surfaces)s, %(driver_high_touch_surfaces)s)]\n[parameters: ({'Date_and_time_of_trip': '24 Aug, 2021 02:31 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:26 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 02:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:36 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:37 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:50 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:46 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:00 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:55 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:15 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 04:07 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'})]\n(Background on this error at: https://sqlalche.me/e/14/4xp6)\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 11-14-34 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp4.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp4.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp4.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 11-15-41 AM",
  "UberLogs": [
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nmysql.connector.errors.DatabaseError: 1366 (HY000): Incorrect integer value: 'Manmeet' for column 'driver_id_id' at row 1\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 99, in process_and_save_cleaning_records\n    cleaning_records_df.to_sql('core_ubercleaningrecords', engine, if_exists='append', index=False)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/core/generic.py\", line 2872, in to_sql\n    sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 717, in to_sql\n    pandas_sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1761, in to_sql\n    sql_engine.insert_records(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1350, in insert_records\n    raise err\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1340, in insert_records\n    table.insert(chunksize=chunksize, method=method)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 967, in insert\n    exec_insert(conn, keys, chunk_iter)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 882, in _execute_insert\n    conn.execute(self.table.insert(), data)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1289, in execute\n    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/elements.py\", line 325, in _execute_on_connection\n    return connection._execute_clauseelement(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1481, in _execute_clauseelement\n    ret = self._execute_context(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1845, in _execute_context\n    self._handle_dbapi_exception(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 2026, in _handle_dbapi_exception\n    util.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nsqlalchemy.exc.DatabaseError: (mysql.connector.errors.DatabaseError) 1366 (HY000): Incorrect integer value: 'Manmeet' for column 'driver_id_id' at row 1\n[SQL: INSERT INTO core_ubercleaningrecords (`Date_and_time_of_trip`, `Date_and_Time_of_clean`, driver_id_id, driver_certificate_id, passenger_high_touch_surfaces, driver_high_touch_surfaces) VALUES (%(Date_and_time_of_trip)s, %(Date_and_Time_of_clean)s, %(driver_id_id)s, %(driver_certificate_id)s, %(passenger_high_touch_surfaces)s, %(driver_high_touch_surfaces)s)]\n[parameters: ({'Date_and_time_of_trip': '24 Aug, 2021 02:31 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:25 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 02:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:38 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:34 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:50 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:47 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:00 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:52 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:15 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 04:11 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'})]\n(Background on this error at: https://sqlalche.me/e/14/4xp6)\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 11-15-41 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp4.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp4.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp4.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 11-17-31 AM",
  "UberLogs": [
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 80, in process_and_save_cleaning_records\n    for driverid,dval in driver_ids:\nValueError: too many values to unpack (expected 2)\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 11-17-31 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp4.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp4.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp4.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 11-21-44 AM",
  "UberLogs": [
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 81, in process_and_save_cleaning_records\n    print(driverid + \" \" + dval)\nTypeError: can only concatenate str (not \"int\") to str\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 11-21-44 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp4.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp4.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp4.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 11-22-19 AM",
  "UberLogs": [
   "ERROR: Cleaning Records could not be sent to UberCleaningRecords.",
   "Traceback (most recent call last):\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nmysql.connector.errors.DatabaseError: 1366 (HY000): Incorrect integer value: 'Manmeet' for column 'driver_id_id' at row 1\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/cleaning_rec/Helpers/DatabaseFunctions.py\", line 97, in process_and_save_cleaning_records\n    cleaning_records_df.to_sql('core_ubercleaningrecords', engine, if_exists='append', index=False)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/core/generic.py\", line 2872, in to_sql\n    sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 717, in to_sql\n    pandas_sql.to_sql(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1761, in to_sql\n    sql_engine.insert_records(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1350, in insert_records\n    raise err\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 1340, in insert_records\n    table.insert(chunksize=chunksize, method=method)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 967, in insert\n    exec_insert(conn, keys, chunk_iter)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/pandas/io/sql.py\", line 882, in _execute_insert\n    conn.execute(self.table.insert(), data)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1289, in execute\n    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/sql/elements.py\", line 325, in _execute_on_connection\n    return connection._execute_clauseelement(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1481, in _execute_clauseelement\n    ret = self._execute_context(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1845, in _execute_context\n    self._handle_dbapi_exception(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 2026, in _handle_dbapi_exception\n    util.raise_(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\n    raise exception\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1782, in _execute_context\n    self.dialect.do_executemany(\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 716, in do_executemany\n    cursor.executemany(statement, parameters)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 654, in executemany\n    return self.execute(stmt)\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/cursor.py\", line 551, in execute\n    self._handle_result(self._connection.cmd_query(stmt))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 490, in cmd_query\n    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))\n  File \"/opt/conda/envs/cleaningrecords/lib/python3.9/site-packages/mysql/connector/connection.py\", line 395, in _handle_result\n    raise errors.get_exception(packet)\nsqlalchemy.exc.DatabaseError: (mysql.connector.errors.DatabaseError) 1366 (HY000): Incorrect integer value: 'Manmeet' for column 'driver_id_id' at row 1\n[SQL: INSERT INTO core_ubercleaningrecords (`Date_and_time_of_trip`, `Date_and_Time_of_clean`, driver_id_id, driver_certificate_id, passenger_high_touch_surfaces, driver_high_touch_surfaces) VALUES (%(Date_and_time_of_trip)s, %(Date_and_Time_of_clean)s, %(driver_id_id)s, %(driver_certificate_id)s, %(passenger_high_touch_surfaces)s, %(driver_high_touch_surfaces)s)]\n[parameters: ({'Date_and_time_of_trip': '24 Aug, 2021 02:31 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:26 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 02:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 02:33 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:40 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:34 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 03:50 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:42 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:00 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 03:52 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'}, {'Date_and_time_of_trip': '24 Aug, 2021 04:15 PM', 'Date_and_Time_of_clean': '24 Aug, 2021 04:11 PM', 'driver_id_id': 'Manmeet', 'driver_certificate_id': 'DC631236', 'passenger_high_touch_surfaces': 'Y', 'driver_high_touch_surfaces': 'Y'})]\n(Background on this error at: https://sqlalche.me/e/14/4xp6)\n",
   "Exiting the Program"
  ]
 },
 {
  "UberDateLog": "02/12/2021 11-22-19 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp4.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp4.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp4.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 11-22-55 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp4.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp4.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp4.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 },
 {
  "UberDateLog": "02/12/2021 11-24-50 AM",
  "UberLogs": [
   [
    "Folder settings from folder_config.json Loaded successfully.",
    "CSV and HTML files copied successfully to the newly created designated folders.",
    "Folder Structure created successfully."
   ],
   [
    "Creating the final dataframe having all the required columns",
    "DataFrame configurations from DataFrameConfig.json Loaded successfully.",
    "Config settings from config.json Loaded successfully.",
    "Date and Time Data successfully loaded in the dataframe.",
    "Renaming the dataframe columns to one provided in the CPVV Template !!!",
    "Rendering the dataframe to HTML!!!"
   ],
   [
    "Database credentials from DBconfig.json Loaded successfully.",
    "Connecting to Database",
    "Sending Records to database....",
    "Transferring records to UberCleaningRecords....",
    "Records sent to database successfully"
   ],
   [
    "Config settings from config.json Loaded successfully.",
    "Concatenating the final HTML!!!",
    "Saving the final HTML to HTML file in HTML Folder!!!"
   ],
   [
    "Begin to write the PDF file from the resultant HTML!!!",
    "'Cleaning-record-Temp6.pdf' written successfully from the resultant HTML file!!!",
    "Uploading 'Cleaning-record-Temp6.pdf' to AWS Cloud!!!",
    "'Cleaning-record-Temp6.pdf' uploaded to AWS Cloud successfully!!!"
   ]
  ]
 }
]